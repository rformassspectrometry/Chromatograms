% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Chromatograms.R
\name{Chromatograms}
\alias{Chromatograms}
\alias{Chromatograms-class}
\alias{setBackend,Chromatograms,ChromBackend-method}
\title{The Chromatograms class to manage and access chromatographic data}
\usage{
Chromatograms(backend = ChromBackendMemory(), processingQueue = list(), ...)

\S4method{setBackend}{Chromatograms,ChromBackend}(
  object,
  backend,
  f = processingChunkFactor(object),
  BPPARAM = bpparam(),
  ...
)
}
\arguments{
\item{backend}{\link{ChromBackend} object providing the raw data for the
\code{Chromatograms} object.}

\item{processingQueue}{\link{list} a list of processing steps to be applied to the
chromatograms data. Each element in the list is a function that
processes the chromatograms data. The processing steps are applied in
the order they are listed in the \code{processingQueue}.}

\item{...}{Additional arguments.}

\item{object}{A \link{Chromatograms} object.}

\item{f}{\code{factor} defining the grouping to split the \code{Chromatograms} object.}

\item{BPPARAM}{Parallel setup configuration. See \code{\link[BiocParallel:register]{BiocParallel::bpparam()}}
for more information.}
}
\description{
The \code{Chromatograms} class encapsules chromatographic data and related metadata.
The chromatographic data is represented by a \emph{backend} extending the virtual
\link{ChromBackend} class which provides the raw data to the \code{Chromatograms}
object. Different backends and their properties are explained in the
\link{ChromBackend} class documentation.
}
\section{Data stored in a \code{Chromatograms} object}{


The \code{Chromatograms} object is a container for chromatographic data that includes
peaks data (\emph{retention time} and related intensity values,
also referred to as \emph{peaks data variables} in the context of \code{Chromatograms})
and metadata of individual chromatogram (so called
\emph{chromatograms variables}). While a core set of chromatograms variables (the
\code{coreChromatogramsVariables()}) and peaks data variables (the
\code{corePeaksVariables()}) are guaranteed to be provided by a \code{Chromatograms},
it is possible to add arbitrary additional chromatograms variables to a
\code{Chromatograms} object.

The \emph{chromatograms variables} information can be accessed using the
\code{chromData()} function. it is also possible to access specific
chromatograms variables using \code{$}. \code{chromData} can be accessed, replaced but
also filtered/subsetted. Refer to the \link{chromData} documentation for more
details.

The \code{Chromatograms} object is designed to contain chromatographic data of a
(large) set of chromatograms. The data is organized \emph{linearly} and can be
thought of a list of chromatograms, i.e. each element in the \code{Chromatograms}
is one chromatogram.
}

\section{Creation of objects}{


\code{Chromatograms} objects can be created using the \code{Chromatograms()}
construction function.
}

\examples{
## create a Chromatograms object
chroms <- Chromatograms(backend = ChromBackendMemory())

}
\seealso{
\link{chromData} for a general description of the chromatographic
metadata available in the object, as well as how to access, replace
and subset them.
\link{peaksData} for a general description of the chromatographic peaks
data available in the object, as well as how to access, replace and
subset them.
\link{processingQueue} for more information on the queuing
of precessing and parallelization for larger dataset processing
see .
}
